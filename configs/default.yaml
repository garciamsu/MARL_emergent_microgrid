# ==============================================================
# General mode
# ==============================================================

mode: train        # train | offline
offline_run: null  # set run_id if mode=offline

# ==============================================================
# Simulation parameters
# ==============================================================

simulation:
  episodes: 300
  dt_h: 1.0            # step size in hours (must divide 1.0 exactly)
  seed: 42
  dataset: Case1.csv

  epsilon:
    schedule: linear    # linear | exponential | constant | custom
    start: 1.0
    end: 0.05
    decay: 0.99
    values: []          # only for custom

validation:
  enabled: true
  episodes: 20
  epsilon: 0.0

# ==============================================================
# Discretization parameters
# ==============================================================

discretization:
  bins_power: 7
  demand_bins: auto
  renewable_bins: auto

# ==============================================================
# Stability definition
# ==============================================================

stability:
  window: 200
  metric: IAE
  reference: median50
  tolerance: 1.10

# ==============================================================
# I/O and results
# ==============================================================

io:
  export: true
  results_dir: results
  plots_dir: plots
  evolution_dir: evolution
  checkpoints_dir: checkpoints
  metrics_file: metrics_episode.xlsx
  export_plots_format: svg

# ==============================================================
# Metrics to compute
# ==============================================================

metrics:
  - IAE
  - ISE
  - Var_dif
  - REP
  - GEP
  - Q_norm
  - Mean_Rewards

# ==============================================================
# Agents and their configurations
# ==============================================================

agents:

  solar:
    count: 1
    policy:
      type: tabular_ql
      alpha: 0.1
      gamma: 0.9
    reward:
      type: DefaultSolarReward
      params: {theta: 3, beta: 3}
    state_space:
      - {var: solar_power, source: env, bins: auto}
      - {var: P_ren_pot,  source: env, bins: auto}
      - {var: demand,     source: env, bins: auto}
    limits:
      p_max: 500
      efficiency: 0.98

  wind:
    count: 1
    policy:
      type: tabular_ql
      alpha: 0.1
      gamma: 0.9
    reward:
      type: DefaultWindReward
      params: {theta: 3, beta: 3}
    state_space:
      - {var: wind_power, source: env, bins: auto}
      - {var: P_ren_pot,  source: env, bins: auto}
      - {var: demand,     source: env, bins: auto}
    limits:
      p_max: 300
      efficiency: 0.95

  battery:
    count: 2
    policy:
      type: tabular_ql
      alpha: 0.1
      gamma: 0.9
    reward:
      type: DefaultBatteryReward
      params: {sigma: 10, mu: 7}
    state_space:
      - {var: soc,        source: self, bins: [0,0.2,0.4,0.6,0.8,1.0]}
      - {var: P_dem,      source: env,  bins: auto}
      - {var: P_tot,      source: env,  bins: auto}
    limits:
      capacity_ah: 3
      v_nom: 48
      soc_min: 0.0
      soc_max: 1.0
      p_charge_max: 100
      p_discharge_max: 100

  grid:
    count: 1
    policy:
      type: tabular_ql
      alpha: 0.1
      gamma: 0.9
    reward:
      type: DefaultGridReward
      params: {sigma: 6, mu: 3}
    state_space:
      - {var: price, source: env, bins: auto}
      - {var: demand, source: env, bins: auto}
    limits:
      p_max: 1000
      export_allowed: true

  load:
    count: 1
    policy:
      type: tabular_ql
      alpha: 0.1
      gamma: 0.9
    reward:
      type: DefaultLoadReward
      params: {sigma: 9, mu: 4}
    state_space:
      - {var: demand,       source: env,  bins: auto}
      - {var: comfort_idx,  source: self, categories: [acceptable, expensive]}
    limits:
      p_load: 200
      comfort_threshold: 6
